CREATE TABLE db.livro (
    id int auto_increment NOT NULL,
    nome varchar(100) NOT NULL,
    CONSTRAINT livro_PK PRIMARY KEY (id)
);

CREATE TABLE db.pagina (
	id int auto_increment NOT NULL,
	numero int NOT NULL,
	conteudo varchar(1000) NOT NULL,
	CONSTRAINT pagina_PK PRIMARY KEY (id)
);

CREATE TABLE db.capitulo (
	id int auto_increment NOT NULL,
    id_livro int NOT NULL,
	id_pagina int NOT NULL,
	titulo varchar(100) NOT NULL,
	CONSTRAINT capitulo_PK PRIMARY KEY (id),
	CONSTRAINT capitulo_FK FOREIGN KEY (id_pagina) REFERENCES db.pagina(id)
);

# Livro 1
INSERT INTO db.livro (nome) VALUES ('Código Limpo: Habilidades Práticas do Agile Software');

INSERT INTO db.pagina (numero, conteudo) VALUES (1, 'Clean Code é um conceito essencial na engenharia de software, enfatizando a criação de códigos legíveis, manuteníveis e eficientes. Introduzido por Robert C. Martin, também conhecido como "Uncle Bob", no livro "Clean Code: A Handbook of Agile Software Craftsmanship", ele destaca práticas e princípios que ajudam os desenvolvedores a escrever códigos de alta qualidade.Entre os princípios fundamentais estão a simplicidade, clareza e a ausência de duplicação. O código deve ser fácil de entender, com funções e classes pequenas e bem definidas. Nomeação adequada de variáveis, funções e classes é crucial para melhorar a legibilidade. Comentários devem ser usados com moderação, somente quando necessário para explicar o "porquê" e não o "como", pois o código limpo se explica por si mesmo. Além disso, testes unitários são essenciais para garantir que o código funciona conforme esperado e pode ser modificado com segurança no futuro. Refatoração contínua é incentivada para manter o código limpo ao longo do tempo. Adotar a filosofia do Clean Code contribui para a redução de bugs, facilitando a colaboração entre desenvolvedores e melhorando a qualidade geral do software.');
INSERT INTO db.pagina (numero, conteudo) VALUES (2, 'As vantagens do Clean Code são significativas para qualquer equipe de desenvolvimento de software. Primeiramente, código limpo melhora a legibilidade, tornando mais fácil para os desenvolvedores entenderem o que o código está fazendo. Isso reduz o tempo gasto na compreensão do funcionamento do sistema e facilita a colaboração entre os membros da equipe. Além disso, códig limpo tende a ter menos erros, pois é mais claro e estruturado, facilitando a detecção de bugs e sua correção. Outro benefício importante é a manutenibilidade a longo prazo. Código limpo é mais fácil de manter e atualizar, mesmo quando novos requisitos são introduzidos. Isso porque o código bem escrito segue princípios como a modularidade e a separação de preocupações, o que permite alterações sem afetar outras partes do sistema de maneira inesperada. Como resultado, as equipes podem iterar mais rapidamente e com menos riscos de introduzir regressões ou problemas de compatibilidade. Além disso, o código limpo promove uma arquitetura mais robusta. Ao seguir boas práticas como a criação de funções e classes coesas e com responsabilidades bem definidas, o sistema tende a ser mais escalável e menos propenso a acoplamento excessivo. Isso facilita a adaptação do software a mudanças no ambiente ou nos requisitos do negócio ao longo do tempo. Por fim, o Clean Code contribui para a satisfação geral da equipe. Desenvolvedores que trabalham com código limpo tendem a se sentir mais confiantes em seu trabalho e mais motivados a colaborar efetivamente com seus colegas. Isso cria um ambiente de trabalho mais positivo e produtivo, onde a qualidade do software é priorizada desde o início do processo de desenvolvimento.');
INSERT INTO db.pagina (numero, conteudo) VALUES (2, 'Implementar práticas de Clean Code traz inúmeros benefícios, mas também apresenta desafios potenciais. Um dos principais desafios é o tempo e o esforço adicionais necessários no início do desenvolvimento para planejar, revisar e refatorar o código de acordo com os princípios estabelecidos. Isso pode prolongar o ciclo de desenvolvimento inicialmente. Além disso, há o risco de que a busca pela perfeição leve a uma análise excessiva ou a uma complexidade desnecessária no código, dificultando a compreensão para desenvolvedores menos experientes. Outra questão é a interpretação subjetiva das diretrizes de Clean Code, que pode resultar em inconsistências na aplicação das práticas dentro de uma equipe. Adotar o Clean Code também pode ser percebido como inflexível em ambientes ágeis, onde a capacidade de resposta rápida às mudanças é essencial. Por fim, implementar e manter práticas de Clean Code pode exigir investimentos significativos em treinamento e desenvolvimento profissional para garantir que todos os membros da equipe estejam alinhados e aptos a aplicar esses conceitos de forma eficaz.');

INSERT INTO db.capitulo (id_livro, id_pagina, titulo) VALUES (1, 1, 'Introdução'),
INSERT INTO db.capitulo (id_livro, id_pagina, titulo) VALUES (1, 2, 'Vantagens do Clean Code'),
INSERT INTO db.capitulo (id_livro, id_pagina, titulo) VALUES (1, 3, 'Desvantagens do Clean Code'),

# Livro 2
INSERT INTO db.livro (nome) VALUES ('Refatoração: Aperfeiçoando o Design de Códigos Existentes');

INSERT INTO db.pagina (numero, conteudo) VALUES (1, 'Refatoração é uma prática fundamental no desenvolvimento de software que se concentra na melhoria contínua da estrutura interna do código, sem alterar seu comportamento externo. Popularizada por Martin Fowler, refatoração visa aprimorar a legibilidade, manutenibilidade e eficiência do código, tornando-o mais claro, conciso e fácil de entender. Em vez de apenas adicionar novos recursos ou corrigir bugs, refatorar envolve reorganizar o código existente para eliminar duplicações, simplificar lógicas complexas e promover uma estrutura mais coesa e escalável. Essa abordagem não só reduz a complexidade acumulada ao longo do tempo, mas também facilita a incorporação de novas funcionalidades e adaptações às mudanças nos requisitos do software. Ao priorizar a clareza e a simplicidade do código, a refatoração não apenas melhora a qualidade técnica do produto final, mas também aumenta a produtividade da equipe ao longo do ciclo de vida do desenvolvimento de software.');
INSERT INTO db.pagina (numero, conteudo) VALUES (2, 'Refatorar é crucial para garantir a qualidade e sustentabilidade do software ao longo do tempo. Permite melhorar a estrutura interna do código, tornando-o mais compreensível e fácil de manter, mesmo conforme o projeto cresce e evolui. Isso reduz a complexidade desnecessária, elimina duplicações e simplifica lógicas complexas, o que facilita a detecção e correção de bugs. Além disso, refatorar promove uma arquitetura mais robusta e escalável, facilitando a adição de novos recursos e adaptação às mudanças nos requisitos. Ao investir tempo em refatoração, as equipes não apenas melhoram a qualidade técnica do software, mas também aumentam a eficiência e a satisfação do desenvolvedor, contribuindo para um desenvolvimento mais ágil e sustentável.');
INSERT INTO db.pagina (numero, conteudo) VALUES (2, 'Refatorar deve ser uma prática contínua ao longo do ciclo de vida do desenvolvimento de software. Idealmente, deve ser realizado sempre que o código apresenta sinais de complexidade desnecessária, como duplicação de código, lógica complicada, falta de clareza ou baixa modularidade. Além disso, refatoração é recomendada antes de adicionar novos recursos ou funcionalidades significativas, para garantir que o código base esteja limpo e organizado. Também é aconselhável refatorar após identificar bugs frequentes ou ao realizar alterações que revelam deficiências na estrutura do código. Em resumo, refatoração é uma prática preventiva e proativa que deve ser integrada ao processo de desenvolvimento para manter o código saudável e sustentável ao longo do tempo.');

INSERT INTO db.capitulo (id_livro, id_pagina, titulo) VALUES (1, 1, 'Introdução'),
INSERT INTO db.capitulo (id_livro, id_pagina, titulo) VALUES (1, 1, 'Por que refatorar ?'),
INSERT INTO db.capitulo (id_livro, id_pagina, titulo) VALUES (1, 1, 'Quando refatorar ?'),

# Livro 3
INSERT INTO db.livro (nome) VALUES ('O poder do hábito: Por que fazemos o que fazemos na vida e nos negócios');

INSERT INTO db.pagina (numero, conteudo) VALUES (1, '"O Poder do Hábito", escrito por Charles Duhigg, explora como os hábitos moldam nossa vida diária e influenciam nossos sucessos e fracassos. O livro revela a ciência por trás dos hábitos e como podemos modificá-los para transformar nossas vidas. Duhigg explora exemplos variados, desde indivíduos que mudaram hábitos pessoais até organizações que transformaram culturas empresariais. Ele desmistifica o processo de formação de hábitos, destacando o ciclo de sinal, rotina e recompensa, e como identificar e modificar gatilhos para alcançar mudanças duradouras.');
INSERT INTO db.pagina (numero, conteudo) VALUES (2, 'É desafiador desenvolver e manter hábitos saudáveis por várias razões interligadas. Primeiramente, hábitos são formados pela repetição de comportamentos ao longo do tempo, muitas vezes inconscientemente. Mudar hábitos exige esforço consciente e persistência, o que pode ser difícil de sustentar diante de outras prioridades e distrações do dia a dia. Além disso, hábitos muitas vezes estão enraizados em recompensas imediatas e gratificações instantâneas, como comer alimentos não saudáveis, procrastinar ou evitar exercícios físicos. Essas recompensas são poderosas e difíceis de resistir, especialmente quando confrontadas com as recompensas menos visíveis e de longo prazo de hábitos saudáveis, como uma boa saúde, energia sustentada e bem-estar geral. Outro desafio é a influência do ambiente. Ambientes que não são propícios a hábitos saudáveis, como falta de acesso a alimentos nutritivos, ambientes de trabalho estressantes ou falta de tempo para atividades físicas, podem dificultar a adoção de comportamentos saudáveis. Além disso, hábitos são fortemente influenciados por fatores emocionais, sociais e psicológicos. Estresse, ansiedade, solidão ou pressões sociais podem levar a comportamentos que sabotam hábitos saudáveis, como comer emocionalmente, fumar ou consumir álcool excessivamente. Por fim, a falta de habilidades ou conhecimento sobre como mudar hábitos também pode ser um obstáculo. Não entender os mecanismos por trás dos hábitos ou não ter estratégias eficazes para substituir comportamentos indesejados por hábitos saudáveis pode dificultar o processo de mudança. Superar esses desafios requer autoconhecimento, planejamento estratégico, paciência e apoio social. Identificar gatilhos, estabelecer metas realistas, modificar o ambiente e buscar apoio de amigos, familiares ou profissionais de saúde são passos importantes para criar e manter hábitos saudáveis a longo prazo. ?');
INSERT INTO db.pagina (numero, conteudo) VALUES (2, '');

INSERT INTO db.capitulo (id_livro, id_pagina, titulo) VALUES (1, 1, 'Introdução'),
INSERT INTO db.capitulo (id_livro, id_pagina, titulo) VALUES (1, 1, 'Por que é difícil ter hábitos saudaveis ?'),
INSERT INTO db.capitulo (id_livro, id_pagina, titulo) VALUES (1, 1, 'Desenvolver bons hábitos requer uma abordagem consciente e consistente ao longo do tempo. Primeiramente, é essencial identificar claramente o hábito que se deseja adotar, seja fazer exercícios regularmente, alimentar-se de forma mais saudável ou dedicar tempo para meditar. Definir metas específicas e alcançáveis ajuda a manter o foco e a motivação. Em seguida, é importante entender os gatilhos que desencadeiam o comportamento atual e substituí-los por novos gatilhos que favoreçam o hábito desejado. Por exemplo, se o gatilho para comer junk food é o estresse, substituir esse comportamento por um hábito mais saudável, como fazer uma caminhada rápida ou meditar, pode ajudar a lidar com o estresse de forma mais positiva. Consistência é fundamental. Estabelecer uma rotina diária ou semanal para praticar o novo hábito ajuda a incorporá-lo na vida cotidiana. Começar com pequenos passos e aumentar gradualmente a dificuldade ou a duração do hábito pode tornar a mudança mais viável e sustentável a longo prazo. Reforçar o comportamento desejado com recompensas positivas também é eficaz. Isso pode ser algo simples, como elogiar a si mesmo ou anotar o progresso alcançado. Celebrar as pequenas vitórias ao longo do caminho mantém a motivação e fortalece o hábito. Manter um ambiente que apoie o novo hábito também é crucial. Isso pode envolver a remoção de tentações que sabotam o progresso, como alimentos não saudáveis na despensa, ou a criação de um espaço dedicado para a prática de exercícios físicos ou meditação. Por fim, buscar apoio social pode ser um grande impulso. Compartilhar metas com amigos ou familiares e encontrar uma comunidade que valorize hábitos saudáveis pode proporcionar encorajamento, responsabilidade e troca de experiências positivas. Desenvolver bons hábitos não acontece da noite para o dia, mas com dedicação, paciência e estratégias eficazes, é possível incorporar mudanças positivas na vida cotidiana e colher os benefícios a longo prazo para a saúde e o bem-estar.'),
